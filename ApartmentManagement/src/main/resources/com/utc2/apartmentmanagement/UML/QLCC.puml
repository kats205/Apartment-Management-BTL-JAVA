@startuml Apartment Management System

' Định nghĩa các gói
package "User Management" {
  ' Lớp User
  class User {
    -int userId
    -String username
    -String password
    -String fullName
    -String email
    -String phoneNumber
    -int roleId
    -boolean active
    +login(username, password): boolean
    +logout(): void
    +changePassword(oldPassword, newPassword): boolean
    +hasPermission(String permissionName): boolean
  }

  ' Lớp Role
  class Role {
    -int roleId
    -String roleName
    -String description
    -List<String> permissions
    +getPermissions(): List<String>
    +addPermission(String permission): void
    +removePermission(String permission): void
  }
}

package "Property Management" {
  ' Lớp Building
  class Building {
    -int buildingId
    -String buildingName
    -String address
    -int totalFloors
    -int totalApartments
    -Date completionDate
    +getAvailableApartments(): List<Apartment>
    +getOccupiedApartments(): List<Apartment>
    +getApartmentById(String id): Apartment
  }

  ' Lớp Apartment
  class Apartment {
    -String apartmentId
    -int buildingId
    -int floor
    -float area
    -int bedrooms
    -String status
    -double maintenanceFee
    +calculateMaintenanceFee(): double
    +getResidents(): List<Resident>
    +getBills(): List<Bill>
  }
}

package "Resident Management" {
  ' Lớp Resident
  class Resident {
    -int residentId
    -String apartmentId
    -String fullName
    -String identityCard
    -Date dateOfBirth
    -String gender
    -String phoneNumber
    -String email
    -boolean isPrimaryResident
    -Date moveInDate
    +updateProfile(): void
    +getApartment(): Apartment
    +getVehicles(): List<Vehicle>
  }
}

package "Service Management" {
  ' Lớp Service
  class Service {
    -int serviceId
    -String serviceName
    -String description
    -double price
    -String unit
    -boolean isAvailable
    +register(String apartmentId): boolean
    +cancel(String apartmentId): boolean
    +getRegisteredApartments(): List<String>
  }
}

package "Billing Management" {
  ' Lớp Bill
  class Bill {
    -int billId
    -String apartmentId
    -Date billingDate
    -Date dueDate
    -double totalAmount
    -String status
    -List<BillItem> items
    +calculateTotalAmount(): double
    +generatePDF(): File
    +addItem(BillItem item): void
    +isPaid(): boolean
  }

  ' Lớp BillItem
  class BillItem {
    -int itemId
    -int billId
    -String itemType
    -String description
    -double amount
    -double quantity
    -double total
    +calculateTotal(): double
  }

  ' Lớp Payment
  class Payment {
    -int paymentId
    -int billId
    -double amount
    -Date paymentDate
    -String paymentMethod
    -String transactionId
    -String status
    +verifyPayment(): boolean
    +generateReceipt(): File
    +getBill(): Bill
  }
}

package "Maintenance Management" {
  ' Lớp MaintenanceRequest
  class MaintenanceRequest {
    -int requestId
    -String apartmentId
    -int residentId
    -Date requestDate
    -String description
    -String status
    -String priority
    -int assignedStaffId
    -Date completionDate
    +assignToStaff(int staffId): void
    +updateStatus(String status): void
    +getApartment(): Apartment
    +getResident(): Resident
  }
}

package "Security Management" {
  ' Lớp Vehicle
  class Vehicle {
    -int vehicleId
    -int residentId
    -String licensePlate
    -String vehicleType
    -String parkingSlot
    -Date registrationDate
    -boolean isActive
    +getResident(): Resident
    +assignParkingSlot(String slot): boolean
  }

  ' Lớp Visitor
  class Visitor {
    -int visitorId
    -String apartmentId
    -String fullName
    -String identityCard
    -String phoneNumber
    -Date visitDate
    -Date entranceTime
    -Date exitTime
    -String purpose
    -boolean approved
    +checkIn(): void
    +checkOut(): void
    +getApartment(): Apartment
  }
}

package "Notification and Reporting" {
  ' Lớp Notification
  class Notification {
    -int notificationId
    -String title
    -String content
    -Date creationDate
    -String type
    -boolean isRead
    -List<Integer> recipientIds
    +send(): boolean
    +markAsRead(int userId): void
    +getRecipients(): List<User>
  }

  ' Lớp Report
  class Report {
    -int reportId
    -String reportType
    -Date generationDate
    -int generatedByUserId
    -String parameters
    +generateReport(): File
    +generateFinancialReport(Date from, Date to): File
    +generateOccupancyReport(): File
    +generateMaintenanceReport(Date from, Date to): File
  }
}

' Định nghĩa các mối quan hệ
User "1" -- "1" Role : has >
Building "1" -- "1..*" Apartment : contains >
Apartment "1" -- "0..*" Resident : houses >
Apartment "1" -- "0..*" Bill : billed to >
Bill "1" -- "1..*" BillItem : consists of >
Bill "1" -- "0..*" Payment : paid by >
Apartment "1" -- "0..*" MaintenanceRequest : requests >
Resident "1" -- "0..*" Vehicle : owns >
Apartment "1" -- "0..*" Visitor : visits >
User "1" -- "0..*" Notification : receives >

@enduml